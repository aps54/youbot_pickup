#include <ros/ros.h>
#include <tf/transform_datatypes.h>
#include <tf/LinearMath/Transform.h>

#include <geometry_msgs/Pose.h>
#include <brics_actuator/JointPositions.h>
#include <brics_actuator/JointValue.h>
#include <moveit/kinematics_base/kinematics_base.h>
#include <pluginlib/class_loader.h>
//#include <youbot_arm_kinematics_moveit/youbot_arm_kinematics_moveit.h>


#include <iostream>
#include <sstream>
#include <vector>
#include <string>
#include <stdlib.h>
#include <stdio.h>

#include <boost/units/io.hpp>
#include <boost/units/systems/si/length.hpp> //For m
#include <boost/units/systems/si/plane_angle.hpp> //For rad

typedef boost::shared_ptr<kinematics::KinematicsBase> KinematicsPtr;
KinematicsPtr ik_;

brics_actuator::JointPositions pos;

std::vector<brics_actuator::JointValue> armJointPositions;
std::vector<brics_actuator::JointValue> gripperJointPositions;

// Publishers 
ros::Publisher arm_pub, gripper_pub;

ros::NodeHandle n;

int init();

// 
void publishArmValues(std::vector<double>& p);

void publishGripperValues(double w);

void goHome();

int moveArm(std::vector<double>& seed, tf::Transform& goal);
